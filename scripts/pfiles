#!/bin/bash

# Note: $LOCAL_DEV_DIR must be set in .bash_profile for this to work properly

set -e # exit immediately if command exits with a non-zero status

# Save current directory to return to at end of script
START_DIR="$PWD"

# Change into site root if provided
if [ -z "$1" ]
then
	echo "No site directory name provided, using current directory..."
else
	cd $LOCAL_DEV_DIR/$1
fi;

# Gather site root, site name, CMS type
ROOT=$(drush ev "print DRUPAL_ROOT")
if [ "$ROOT" = "DRUPAL_ROOT" ] # meaning it's not defined in the context of where this script ran
then
	echo "Not a Drupal build, attempting to grab Wordpress root..."
	ROOT=$(wp eval "print get_home_path();") #grab code root
	CMS="Wordpress"
else
	CMS="Drupal"
fi;
echo "Confirmed CMS: $CMS"
ROOT=${ROOT%/} #strip trailing slash
echo "Root: $ROOT"
SITE=${ROOT##*/} #grab trailing directory name
echo "Site: $SITE"

# Use terminus to get the Pantheon Site ID
SITE_PID=$(terminus site:info --field="id" $SITE)
echo "Pantheon Site Id: $SITE_PID"

# Determine Site environment
if [ -z "$2" ]
then
    ENV="dev"
else
    ENV=$2
fi;
echo "Pantheon Environment: $ENV"

# Determine appropriate CMS files directory
if [ "$CMS" = "Drupal" ]
then
	cd $LOCAL_DEV_DIR/$SITE/sites/default
	CMS_FILES_DIR="files"
else # Wordpress
	cd $LOCAL_DEV_DIR/$SITE/wp-content
	CMS_FILES_DIR="uploads"
fi;
echo "Files Directory: $PWD/$CMS_FILES_DIR"

# Use rsync to sync files
rsync -rlvz --size-only --ipv4 --progress -e 'ssh -p 2222' $ENV.$SITE_PID@appserver.$ENV.$SITE_PID.drush.in:files/ $CMS_FILES_DIR

# Change permissions
if [ -d "$CMS_FILES_DIR" ]; then
    chmod -R 777 $CMS_FILES_DIR
fi

# Change back to original directory
cd $START_DIR;

# Celebrate!
osascript -e "display notification \"Files synced for $SITE\" with title \"Files Synced!\"";
#say "files synced";